type Query {
  # Metric
  metrics: [Metric!]!

  # Goal
  goals: [Goal!]!

  # Todo
  todos: [Todo!]!
  repetitiveTodos: [Todo!]!
  todoIterations: [Iteration!]!

  # Routine
  routines: [Routine!]!
  repetitiveRoutines: [Routine!]!
  routineIterations: [RoutineTodo_Iteration]!
}

type Mutation {
  # Metric
  updateMetric(metric: MetricInput!): Metric!

  # Goal
  addGoal(goal: GoalInput!): Goal!
  updateGoal(goal: GoalInput!): Goal!
  deleteGoal(id: Int!): Goal!

  # Todo
  addTodo(todo: TodoInput!): Todo!
  updateTodo(todo: TodoInput!): Todo!
  deleteTodo(id: Int!): Todo!
  createTodoIterations(todo: TodoInput!): Todo
  createDefaultTask(iteration: IterationInput!): Todo
  toggleCompletion(iteration: IterationInput!): Iteration
  rescheduleIteration(id: Int!, startAt: String!): Iteration
  attemptIteration(id: Int!, attemptedAt: String!): Iteration
  deleteIteration(id: Int!): Iteration
  refreshRepetitive: [Todo!]!
  getTodoRepeat(idTodo: Int, idRepeat: Int): Todo_Repeat

  # Routine
  addRoutine(routine: RoutineInput!): Routine!
  updateRoutine(routine: RoutineInput!): Routine!
  deleteRoutine(id: Int!): Routine!
  createRoutineIterations(routine: RoutineInput!): Routine
  getRoutineRepeat(idRoutine: Int, idRepeat: Int): Routine_Repeat
  mapTodoIterations(routineTodo_Iteration: RoutineTodo_IterationInput): RoutineTodo_Iteration!

  # Type
  getTypes(parentType: String!): [Type!]!
}

type Subscription {
  # Metric
  metricUpdated: Metric!

  # Goal
  goalAdded: Goal!
  goalUpdated: Goal!
  goalDeleted: Goal!

  # Todo
  todoAdded: Todo!
  todoUpdated: Todo!
  todoDeleted: Todo!
  iterationAdded: Iteration!
  iterationUpdated: Iteration!
  iterationDeleted: Iteration!

  # Routine
  routineAdded: Routine!
  routineUpdated: Routine!
  routineDeleted: Routine!
}

input unmappedIDs {
  parents: [Int]
  children: [Int]
  metrics: [Int]
  goals: [Int]
  todos: [Int]
  routines: [Int]
  timePairs: [Int]
  repeats: [Int]
}
