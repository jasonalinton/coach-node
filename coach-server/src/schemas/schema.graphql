type Query {
  # Items
  items(
    getMetrics: Boolean = true
    getGoals: Boolean = true
    getTodos: Boolean = true
    getRoutines: Boolean = true
  ): Items!

  # Metric
  metrics: [Metric!]!

  # Goal
  goals: [Goal!]!
  goalsByDate(startAt: String, endAt: String): [Goal!]!

  # Todo
  todos: [Todo!]!
  repetitiveTodos: [Todo!]!
  todoIterations: [Iteration!]!

  # Routine
  routines: [Routine!]!
  repetitiveRoutines: [Routine!]!
  routineIterations: [RoutineTodo_Iteration]!

  repeat(id: Int): Repeat!

  # Planner
  # iterations: [Iteration!]!
  iterations(type: String, startAt: String, endAt: String): [Iteration!]!
  eventsAndIterations: EventsAndIterations!
  iterationCompletions(start: String!, end: String!): [IterationCompletion!]!

  #Event
  event(id: Int!): Event
  events(startAt: String, endAt: String): [Event!]!
}

type Mutation {
  # Metric
  updateMetric(metric: MetricInput!): Metric!

  # Goal
  addGoal(goal: GoalInput!): Goal!
  updateGoal(goal: GoalInput!): Goal!
  deleteGoal(id: Int!): Goal!

  # Todo
  addTodo(todo: TodoInput!): Todo!
  updateTodo(todo: TodoInput!): Todo!
  deleteTodo(id: Int!): Todo!
  createTodoIterations(todo: TodoInput!): Todo
  createDefaultTask(iteration: IterationInput!): Todo
  toggleCompletion(idIteration: Int!, attemptedAt: String, completedAt: String): Iteration
  rescheduleIteration(id: Int!, startAt: String!, endAt: String!): Iteration
  getTodoRepeat(idTodo: Int, idRepeat: Int): Todo_Repeat
  scheduleTodo(idTodo: Int!, startAt: String!, endAt: String): TodoAndIteration!
  mapTodoToEvent(idTodo: Int!, idEvent: Int!): TodoAndEventAndIteration!
  attemptIteration(id: Int!, attemptedAt: String!): Iteration
  refreshRepetitiveItems: RepetitiveItems!
  refreshRepetitiveTodo(idTodo: Int!): Todo!

  # Routine
  addRoutine(routine: RoutineInput!): Routine!
  updateRoutine(routine: RoutineInput!): Routine!
  deleteRoutine(id: Int!): Routine!
  createRoutineIterations(routine: RoutineInput!): Routine
  getRoutineRepeat(idRoutine: Int, idRepeat: Int): Routine_Repeat
  mapTodoIterations(
    routineTodo_Iteration: RoutineTodo_IterationInput
  ): RoutineTodo_Iteration!
  refreshRepetitiveRoutine(idRoutine: Int!): Routine!

  # Type
  getTypes(parentType: String!): [Type!]!

  # Event
  addEvent(text: String!, startAt: String!, endAt: String!): Event!
  iterations(startAt: String, endAt: String): [Iteration]
  mapIterationToEvent(iterationID: Int!, eventID: Int!): EventAndIteration!
  unmapTaskFromRoutineEvent(
    iterationID: Int!
    eventID: Int!
    startAt: String
    endAt: String
    newEventID: Int
  ): EventAndIteration!
  deleteIteration(id: Int!): Iteration
  deleteIterations(from: String, after: String): Int!

  # Universal
  tempMisc(temp: String): Boolean
}

type Subscription {
  # Metric
  metricUpdated: Metric!

  # Goal
  goalAdded: Goal!
  goalUpdated: Goal!
  goalDeleted: Goal!

  # Todo
  todoAdded: Todo!
  todoUpdated: Todo!
  todoDeleted: Todo!

  # Routine
  routineAdded: Routine!
  routineUpdated: Routine!
  routineDeleted: Routine!

  # Planner
  iterationAdded(startAt: String, endAt: String): Iteration!
  iterationUpdated(startAt: String, endAt: String): Iteration!
  iterationDeleted(startAt: String, endAt: String): Iteration!
  eventAdded(startAt: String, endAt: String): Event!
  eventUpdated(startAt: String, endAt: String): Event!
  eventDeleted(startAt: String, endAt: String): Event!
}

input unmappedIDs {
  parents: [Int]
  children: [Int]
  metrics: [Int]
  goals: [Int]
  todos: [Int]
  routines: [Int]
  timePairs: [Int]
  repeats: [Int]
}
